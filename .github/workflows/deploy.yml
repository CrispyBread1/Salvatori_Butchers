name: Build and Release

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version (e.g., v1.0.0)"
        required: true

jobs:
  cleanup-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Delete old artifacts
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const repo = context.repo;
            console.log(`Cleaning up artifacts for ${repo.owner}/${repo.repo}`);
            
            // Get list of all artifacts
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: repo.owner,
              repo: repo.repo
            });
            
            // Keep only the 5 most recent artifacts
            const artifactsToDelete = artifacts.data.artifacts.slice(5);
            
            // Delete old artifacts
            for (const artifact of artifactsToDelete) {
              console.log(`Deleting artifact ${artifact.name} (ID: ${artifact.id})`);
              await github.rest.actions.deleteArtifact({
                owner: repo.owner,
                repo: repo.repo,
                artifact_id: artifact.id
              });
            }

  build-macos:
    needs: cleanup-artifacts
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install PostgreSQL (Required for psycopg2)
        run: |
          brew update
          brew install postgresql
          echo "PATH=$(brew --prefix postgresql)/bin:$PATH" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyqt5
          pip install psycopg2-binary
          pip install requests
          pip install PyQtWebEngine
          pip install pyinstaller

      - name: Debug dependencies
        run: python -c "import sys; print(sys.path); import psycopg2; import requests; print('All dependencies imported successfully!')"

      - name: Build executable
        run: pyinstaller main.spec

      - name: Create macOS Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/ManageMeStock
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    needs: cleanup-artifacts
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyqt5
          pip install psycopg2-binary
          pip install requests
          pip install PyQtWebEngine
          pip install pyinstaller
          pip install python-dotenv

      - name: Debug dependencies
        run: python -c "import sys; print(sys.path); import psycopg2; import requests; print('All dependencies imported successfully!')"

      - name: Build executable
        run: pyinstaller main.spec

      - name: Create Windows Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/ManageMeStock.exe
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
